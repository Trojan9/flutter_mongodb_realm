// // This file has been generated by the reflectable package.
// // https://github.com/dart-lang/reflectable.
//
// import 'dart:core';
// import 'package:bson/bson.dart' as prefix5;
// import 'package:flutter_mongodb_realm/realm_sync/realm.dart' as prefix3;
// import 'package:flutter_mongodb_realm/realm_sync/realm_objects.dart' as prefix2;
// import 'package:flutter_mongodb_realm/realm_sync/reflector.dart' as prefix0;
// import 'package:flutter_mongodb_realm_example/model/task.dart' as prefix1;
// import 'package:meta/meta.dart' as prefix4;
//
// // ignore_for_file: prefer_adjacent_string_concatenation
// // ignore_for_file: prefer_collection_literals
// // ignore_for_file: unnecessary_const
// // ignore_for_file: implementation_imports
//
// // ignore:unused_import
// import 'package:reflectable/mirrors.dart' as m;
// // ignore:unused_import
// import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// // ignore:unused_import
// import 'package:reflectable/reflectable.dart' as r show Reflectable;
//
// final _data = <r.Reflectable, r.ReflectorData>{
//   const prefix0.MyReflector(): r.ReflectorData(
//       <m.TypeMirror>[
//         r.NonGenericClassMirrorImpl(
//             r'User2',
//             r'.User2',
//             7,
//             0,
//             const prefix0.MyReflector(),
//             const <int>[0, 1, 2, 7],
//             const <int>[8, 9, 10, 11, 12, 4, 5, 6],
//             const <int>[],
//             1,
//             {},
//             {},
//             {
//               r'': (bool b) => ({id, name, age}) =>
//                   b ? prefix1.User2(age: age, id: id, name: name) : null
//             },
//             0,
//             0,
//             const <int>[],
//             const <Object>[prefix0.RealmClass],
//             null),
//         r.NonGenericClassMirrorImpl(
//             r'RealmObject',
//             r'.RealmObject',
//             519,
//             1,
//             const prefix0.MyReflector(),
//             const <int>[13],
//             const <int>[8, 9, 10, 11, 12],
//             const <int>[],
//             -1,
//             {},
//             {},
//             {},
//             1,
//             1,
//             const <int>[],
//             const <Object>[prefix0.RealmClass],
//             null),
//         r.GenericClassMirrorImpl(
//             r'RealmList',
//             r'.RealmList',
//             7,
//             2,
//             const prefix0.MyReflector(),
//             const <int>[3, 15],
//             const <int>[8, 9, 10, 11, 12, 14],
//             const <int>[],
//             -1,
//             {},
//             {},
//             {
//               r'': (bool b) =>
//                   ([items = const []]) => b ? prefix2.RealmList(items) : null
//             },
//             1,
//             2,
//             const <int>[],
//             const <Object>[prefix0.RealmClass],
//             null, (o) {
//           return o is prefix2.RealmList;
//         }, const <int>[3], 2),
//         r.TypeVariableMirrorImpl(r'T', r'.RealmList.T',
//             const prefix0.MyReflector(), -1, 2, <Object>[])
//       ],
//       <m.DeclarationMirror>[
//         r.VariableMirrorImpl(r'id', 33797, 0, const prefix0.MyReflector(), -1,
//             3, 3, const <int>[], const <Object>[prefix3.PrimaryKey]),
//         r.VariableMirrorImpl(r'name', 33797, 0, const prefix0.MyReflector(), -1,
//             4, 4, const <int>[], const <Object>[const prefix3.MapTo("name")]),
//         r.VariableMirrorImpl(r'age', 33797, 0, const prefix0.MyReflector(), -1,
//             5, 5, const <int>[], const <Object>[const prefix3.MapTo("age")]),
//         r.VariableMirrorImpl(r'items', 2130949, 2, const prefix0.MyReflector(),
//             -1, 6, 7, null, const []),
//         r.ImplicitGetterMirrorImpl(const prefix0.MyReflector(), 0, 4),
//         r.ImplicitGetterMirrorImpl(const prefix0.MyReflector(), 1, 5),
//         r.ImplicitGetterMirrorImpl(const prefix0.MyReflector(), 2, 6),
//         r.MethodMirrorImpl(r'', 0, 0, -1, 0, 0, const <int>[],
//             const <int>[0, 1, 2], const prefix0.MyReflector(), const []),
//         r.MethodMirrorImpl(r'==', 131074, null, -1, 8, 8, const <int>[],
//             const <int>[3], const prefix0.MyReflector(), const []),
//         r.MethodMirrorImpl(r'toString', 131074, null, -1, 4, 4, const <int>[],
//             const <int>[], const prefix0.MyReflector(), const []),
//         r.MethodMirrorImpl(
//             r'noSuchMethod',
//             65538,
//             null,
//             null,
//             null,
//             null,
//             const <int>[],
//             const <int>[4],
//             const prefix0.MyReflector(),
//             const []),
//         r.MethodMirrorImpl(r'hashCode', 131075, null, -1, 5, 5, const <int>[],
//             const <int>[], const prefix0.MyReflector(), const []),
//         r.MethodMirrorImpl(
//             r'runtimeType',
//             131075,
//             null,
//             -1,
//             9,
//             9,
//             const <int>[],
//             const <int>[],
//             const prefix0.MyReflector(),
//             const []),
//         r.MethodMirrorImpl(r'', 64, 1, -1, 1, 1, const <int>[], const <int>[],
//             const prefix0.MyReflector(), const []),
//         r.ImplicitGetterMirrorImpl(const prefix0.MyReflector(), 3, 14),
//         r.MethodMirrorImpl(r'', 0, 2, -1, 10, 2, null, const <int>[5],
//             const prefix0.MyReflector(), const [])
//       ],
//       <m.ParameterMirror>[
//         r.ParameterMirrorImpl(r'id', 45062, 7, const prefix0.MyReflector(), -1,
//             3, 3, const <int>[], const <Object>[prefix4.required], null, #id),
//         r.ParameterMirrorImpl(
//             r'name',
//             45062,
//             7,
//             const prefix0.MyReflector(),
//             -1,
//             4,
//             4,
//             const <int>[],
//             const <Object>[prefix4.required],
//             null,
//             #name),
//         r.ParameterMirrorImpl(r'age', 45062, 7, const prefix0.MyReflector(), -1,
//             5, 5, const <int>[], const <Object>[prefix4.required], null, #age),
//         r.ParameterMirrorImpl(r'other', 32774, 8, const prefix0.MyReflector(),
//             -1, 11, 11, const <int>[], const [], null, null),
//         r.ParameterMirrorImpl(
//             r'invocation',
//             32774,
//             10,
//             const prefix0.MyReflector(),
//             -1,
//             12,
//             12,
//             const <int>[],
//             const [],
//             null,
//             null),
//         r.ParameterMirrorImpl(
//             r'items',
//             2136070,
//             15,
//             const prefix0.MyReflector(),
//             -1,
//             6,
//             7,
//             null,
//             const [],
//             const [],
//             null)
//       ],
//       <Type>[
//         prefix1.User2,
//         prefix2.RealmObject,
//         prefix2.RealmList,
//         prefix5.ObjectId,
//         String,
//         int,
//         const r.FakeType(r'dart.core.List<T*>'),
//         List,
//         bool,
//         Type,
//         const r.FakeType(r'.RealmList<T*>'),
//         Object,
//         Invocation
//       ],
//       3,
//       {
//         r'==': (dynamic instance) => (x) => instance == x,
//         r'toString': (dynamic instance) => instance.toString,
//         r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
//         r'hashCode': (dynamic instance) => instance.hashCode,
//         r'runtimeType': (dynamic instance) => instance.runtimeType,
//         r'id': (dynamic instance) => instance.id,
//         r'name': (dynamic instance) => instance.name,
//         r'age': (dynamic instance) => instance.age,
//         r'items': (dynamic instance) => instance.items
//       },
//       {},
//       <m.LibraryMirror>[
//         r.LibraryMirrorImpl(r'', Uri.parse(r'reflectable://0/'),
//             const prefix0.MyReflector(), const <int>[], {}, {}, const [], null),
//         r.LibraryMirrorImpl(r'', Uri.parse(r'reflectable://1/'),
//             const prefix0.MyReflector(), const <int>[], {}, {}, const [], null)
//       ],
//       [])
// };
//
// final _memberSymbolMap = null;
//
// void initializeReflectable() {
//   r.data = _data;
//   r.memberSymbolMap = _memberSymbolMap;
// }
